# Import important libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

# Load your uploaded CSV file
df = pd.read_csv("Enter file path")

# View first few rows
print(df.head())

# Check for null values and data types
print(df.info())
print(df.describe())

# Pairplot to see feature distribution
sns.pairplot(df, hue='Species')
plt.show()

# Preserve class names
class_names = df['Species'].unique()

# Encode species column (categorical to numeric)
le = LabelEncoder()
df['Species'] = le.fit_transform(df['Species'])  # setosa:0, versicolor:1, virginica:2
df['Species']

# Split into input (X) and output (y)
X = df.drop('Species', axis=1)
y = df['Species']
print(X)
print(y)

# Train-Test Split (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Logistic Regression model
model = LogisticRegression(max_iter=200)
model.fit(X_train, y_train)

# Predict on test data
y_pred = model.predict(X_test)

# Accuracy
print("Accuracy:", accuracy_score(y_test, y_pred))

# Confusion Matrix
print("\nConfusion Matrix:")
print(confusion_matrix(y_test, y_pred))

# Classification Report
print("\nClassification Report:")
print(classification_report(y_test, y_pred, target_names=le.classes_))
